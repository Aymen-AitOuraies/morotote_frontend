{"ast":null,"code":"function $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {\n    value: true,\n    configurable: true\n  });\n}\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\nvar $009ddb00d3ec72b8$exports = {};\n$parcel$defineInteropFlag($009ddb00d3ec72b8$exports);\n$parcel$export($009ddb00d3ec72b8$exports, \"default\", () => $009ddb00d3ec72b8$export$2e2bcd8739ae039);\nclass $009ddb00d3ec72b8$export$2e2bcd8739ae039 extends Error {\n  constructor(filename, msg, lineno, column, css) {\n    super(filename + ':' + lineno + ':' + column + ': ' + msg);\n    this.reason = msg;\n    this.filename = filename;\n    this.line = lineno;\n    this.column = column;\n    this.source = css;\n  }\n}\nvar $0865a9fb4cc365fe$exports = {};\n$parcel$defineInteropFlag($0865a9fb4cc365fe$exports);\n$parcel$export($0865a9fb4cc365fe$exports, \"default\", () => $0865a9fb4cc365fe$export$2e2bcd8739ae039);\n/**\n * Store position information for a node\n */\nclass $0865a9fb4cc365fe$export$2e2bcd8739ae039 {\n  constructor(start, end, source) {\n    this.start = start;\n    this.end = end;\n    this.source = source;\n  }\n}\nvar $b2e137848b48cf4f$exports = {};\n$parcel$export($b2e137848b48cf4f$exports, \"CssTypes\", () => $b2e137848b48cf4f$export$9be5dd6e61d5d73a);\nvar $b2e137848b48cf4f$export$9be5dd6e61d5d73a = /*#__PURE__*/function (CssTypes) {\n  CssTypes[\"stylesheet\"] = \"stylesheet\";\n  CssTypes[\"rule\"] = \"rule\";\n  CssTypes[\"declaration\"] = \"declaration\";\n  CssTypes[\"comment\"] = \"comment\";\n  CssTypes[\"container\"] = \"container\";\n  CssTypes[\"charset\"] = \"charset\";\n  CssTypes[\"document\"] = \"document\";\n  CssTypes[\"customMedia\"] = \"custom-media\";\n  CssTypes[\"fontFace\"] = \"font-face\";\n  CssTypes[\"host\"] = \"host\";\n  CssTypes[\"import\"] = \"import\";\n  CssTypes[\"keyframes\"] = \"keyframes\";\n  CssTypes[\"keyframe\"] = \"keyframe\";\n  CssTypes[\"layer\"] = \"layer\";\n  CssTypes[\"media\"] = \"media\";\n  CssTypes[\"namespace\"] = \"namespace\";\n  CssTypes[\"page\"] = \"page\";\n  CssTypes[\"startingStyle\"] = \"starting-style\";\n  CssTypes[\"supports\"] = \"supports\";\n  return CssTypes;\n}({});\nconst $6d129ebf064c486f$export$82eb5486fce3d340 = 10000;\nconst $6d129ebf064c486f$export$c8b95ffeec50f24a = (string, search, position) => {\n  let currentPosition = position;\n  let maxLoop = $6d129ebf064c486f$export$82eb5486fce3d340;\n  do {\n    const all = search.map(v => string.indexOf(v, currentPosition));\n    all.push(string.indexOf('\\\\', currentPosition));\n    const foundAll = all.filter(v => v !== -1);\n    if (foundAll.length === 0) return -1;\n    const found = Math.min(...foundAll);\n    if (string[found] === '\\\\') {\n      currentPosition = found + 2;\n      maxLoop--;\n    } else return found;\n  } while (maxLoop > 0);\n  throw new Error('Too many escaping');\n};\nconst $6d129ebf064c486f$export$b8d42a8583d2e477 = (string, search, position) => {\n  let currentSearchPosition = position;\n  let maxLoop = $6d129ebf064c486f$export$82eb5486fce3d340;\n  do {\n    const all = search.map(v => string.indexOf(v, currentSearchPosition));\n    all.push(string.indexOf('(', currentSearchPosition));\n    all.push(string.indexOf('\"', currentSearchPosition));\n    all.push(string.indexOf(\"'\", currentSearchPosition));\n    all.push(string.indexOf('\\\\', currentSearchPosition));\n    const foundAll = all.filter(v => v !== -1);\n    if (foundAll.length === 0) return -1;\n    const firstMatchPos = Math.min(...foundAll);\n    const char = string[firstMatchPos];\n    switch (char) {\n      case '\\\\':\n        currentSearchPosition = firstMatchPos + 2;\n        break;\n      case '(':\n        {\n          const endPosition = $6d129ebf064c486f$export$b8d42a8583d2e477(string, [')'], firstMatchPos + 1);\n          if (endPosition === -1) return -1;\n          currentSearchPosition = endPosition + 1;\n        }\n        break;\n      case '\"':\n        {\n          const endQuotePosition = $6d129ebf064c486f$export$c8b95ffeec50f24a(string, ['\"'], firstMatchPos + 1);\n          if (endQuotePosition === -1) return -1;\n          currentSearchPosition = endQuotePosition + 1;\n        }\n        break;\n      case \"'\":\n        {\n          const endQuotePosition = $6d129ebf064c486f$export$c8b95ffeec50f24a(string, [\"'\"], firstMatchPos + 1);\n          if (endQuotePosition === -1) return -1;\n          currentSearchPosition = endQuotePosition + 1;\n        }\n        break;\n      default:\n        return firstMatchPos;\n    }\n    maxLoop--;\n  } while (maxLoop > 0);\n  throw new Error('Too many escaping');\n};\nconst $6d129ebf064c486f$export$801dd37ac183521b = (string, search) => {\n  const result = [];\n  let currentPosition = 0;\n  while (currentPosition < string.length) {\n    const index = $6d129ebf064c486f$export$b8d42a8583d2e477(string, search, currentPosition);\n    if (index === -1) {\n      result.push(string.substring(currentPosition));\n      return result;\n    }\n    result.push(string.substring(currentPosition, index));\n    currentPosition = index + 1;\n  }\n  return result;\n};\n\n// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\n// New rule => https://www.w3.org/TR/CSS22/syndata.html#comments\n// [^] is equivalent to [.\\n\\r]\nconst $d708735ed1303b43$var$commentre = /\\/\\*[^]*?(?:\\*\\/|$)/g;\nconst $d708735ed1303b43$export$98e6a39c04603d36 = (css, options) => {\n  options = options || {};\n  /**\n  * Positional.\n  */\n  let lineno = 1;\n  let column = 1;\n  /**\n  * Update lineno and column based on `str`.\n  */\n  function updatePosition(str) {\n    const lines = str.match(/\\n/g);\n    if (lines) lineno += lines.length;\n    const i = str.lastIndexOf('\\n');\n    column = ~i ? str.length - i : column + str.length;\n  }\n  /**\n  * Mark position and patch `node.position`.\n  */\n  function position() {\n    const start = {\n      line: lineno,\n      column: column\n    };\n    return function (node) {\n      node.position = new (0, $0865a9fb4cc365fe$export$2e2bcd8739ae039)(start, {\n        line: lineno,\n        column: column\n      }, options?.source || '');\n      whitespace();\n      return node;\n    };\n  }\n  /**\n  * Error `msg`.\n  */\n  const errorsList = [];\n  function error(msg) {\n    const err = new (0, $009ddb00d3ec72b8$export$2e2bcd8739ae039)(options?.source || '', msg, lineno, column, css);\n    if (options?.silent) errorsList.push(err);else throw err;\n  }\n  /**\n  * Parse stylesheet.\n  */\n  function stylesheet() {\n    const rulesList = rules();\n    const result = {\n      type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).stylesheet,\n      stylesheet: {\n        source: options?.source,\n        rules: rulesList,\n        parsingErrors: errorsList\n      }\n    };\n    return result;\n  }\n  /**\n  * Opening brace.\n  */\n  function open() {\n    const openMatch = /^{\\s*/.exec(css);\n    if (openMatch) {\n      processMatch(openMatch);\n      return true;\n    }\n    return false;\n  }\n  /**\n  * Closing brace.\n  */\n  function close() {\n    const closeMatch = /^}/.exec(css);\n    if (closeMatch) {\n      processMatch(closeMatch);\n      return true;\n    }\n    return false;\n  }\n  /**\n  * Parse ruleset.\n  */\n  function rules() {\n    let node;\n    const rules = [];\n    whitespace();\n    comments(rules);\n    while (css.length && css.charAt(0) !== '}' && (node = atrule() || rule())) if (node) {\n      rules.push(node);\n      comments(rules);\n    }\n    return rules;\n  }\n  /**\n  * Update position and css string. Return the matches\n  */\n  function processMatch(m) {\n    const str = m[0];\n    updatePosition(str);\n    css = css.slice(str.length);\n    return m;\n  }\n  /**\n  * Parse whitespace.\n  */\n  function whitespace() {\n    const m = /^\\s*/.exec(css);\n    if (m) processMatch(m);\n  }\n  /**\n  * Parse comments;\n  */\n  function comments(rules) {\n    let c;\n    rules = rules || [];\n    while (c = comment()) if (c) rules.push(c);\n    return rules;\n  }\n  /**\n  * Parse comment.\n  */\n  function comment() {\n    const pos = position();\n    if ('/' !== css.charAt(0) || '*' !== css.charAt(1)) return;\n    const m = /^\\/\\*[^]*?\\*\\//.exec(css);\n    if (!m) return error('End of comment missing');\n    processMatch(m);\n    return pos({\n      type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).comment,\n      comment: m[0].slice(2, -2)\n    });\n  }\n  /**\n  * Parse selector.\n  */\n  function selector() {\n    const m = /^([^{]+)/.exec(css);\n    if (!m) return;\n    processMatch(m);\n    // remove comment in selector;\n    const res = $d708735ed1303b43$var$trim(m[0]).replace($d708735ed1303b43$var$commentre, '');\n    return (0, $6d129ebf064c486f$export$801dd37ac183521b)(res, [',']).map(v => $d708735ed1303b43$var$trim(v));\n  }\n  /**\n  * Parse declaration.\n  */\n  function declaration() {\n    const pos = position();\n    // prop\n    const propMatch = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/.exec(css);\n    if (!propMatch) return;\n    processMatch(propMatch);\n    const propValue = $d708735ed1303b43$var$trim(propMatch[0]);\n    // :\n    const sepratotorMatch = /^:\\s*/.exec(css);\n    if (!sepratotorMatch) return error(\"property missing ':'\");\n    processMatch(sepratotorMatch);\n    // val\n    let value = '';\n    const endValuePosition = (0, $6d129ebf064c486f$export$b8d42a8583d2e477)(css, [';', '}']);\n    if (endValuePosition !== -1) {\n      value = css.substring(0, endValuePosition);\n      const fakeMatch = [value];\n      processMatch(fakeMatch);\n      value = $d708735ed1303b43$var$trim(value).replace($d708735ed1303b43$var$commentre, '');\n    }\n    const ret = pos({\n      type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).declaration,\n      property: propValue.replace($d708735ed1303b43$var$commentre, ''),\n      value: value\n    });\n    // ;\n    const endMatch = /^[;\\s]*/.exec(css);\n    if (endMatch) processMatch(endMatch);\n    return ret;\n  }\n  /**\n  * Parse declarations.\n  */\n  function declarations() {\n    const decls = [];\n    if (!open()) return error(\"missing '{'\");\n    comments(decls);\n    // declarations\n    let decl;\n    while (decl = declaration()) if (decl) {\n      decls.push(decl);\n      comments(decls);\n    }\n    if (!close()) return error(\"missing '}'\");\n    return decls;\n  }\n  /**\n  * Parse keyframe.\n  */\n  function keyframe() {\n    let m;\n    const vals = [];\n    const pos = position();\n    while (m = /^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/.exec(css)) {\n      const res = processMatch(m);\n      vals.push(res[1]);\n      const spacesMatch = /^,\\s*/.exec(css);\n      if (spacesMatch) processMatch(spacesMatch);\n    }\n    if (!vals.length) return;\n    return pos({\n      type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).keyframe,\n      values: vals,\n      declarations: declarations() || []\n    });\n  }\n  /**\n  * Parse keyframes.\n  */\n  function atkeyframes() {\n    const pos = position();\n    const m1 = /^@([-\\w]+)?keyframes\\s*/.exec(css);\n    if (!m1) return;\n    const vendor = processMatch(m1)[1];\n    // identifier\n    const m2 = /^([-\\w]+)\\s*/.exec(css);\n    if (!m2) return error('@keyframes missing name');\n    const name = processMatch(m2)[1];\n    if (!open()) return error(\"@keyframes missing '{'\");\n    let frame;\n    let frames = comments();\n    while (frame = keyframe()) {\n      frames.push(frame);\n      frames = frames.concat(comments());\n    }\n    if (!close()) return error(\"@keyframes missing '}'\");\n    return pos({\n      type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).keyframes,\n      name: name,\n      vendor: vendor,\n      keyframes: frames\n    });\n  }\n  /**\n  * Parse supports.\n  */\n  function atsupports() {\n    const pos = position();\n    const m = /^@supports *([^{]+)/.exec(css);\n    if (!m) return;\n    const supports = $d708735ed1303b43$var$trim(processMatch(m)[1]);\n    if (!open()) return error(\"@supports missing '{'\");\n    const style = comments().concat(rules());\n    if (!close()) return error(\"@supports missing '}'\");\n    return pos({\n      type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).supports,\n      supports: supports,\n      rules: style\n    });\n  }\n  /**\n  * Parse host.\n  */\n  function athost() {\n    const pos = position();\n    const m = /^@host\\s*/.exec(css);\n    if (!m) return;\n    processMatch(m);\n    if (!open()) return error(\"@host missing '{'\");\n    const style = comments().concat(rules());\n    if (!close()) return error(\"@host missing '}'\");\n    return pos({\n      type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).host,\n      rules: style\n    });\n  }\n  /**\n  * Parse container.\n  */\n  function atcontainer() {\n    const pos = position();\n    const m = /^@container *([^{]+)/.exec(css);\n    if (!m) return;\n    const container = $d708735ed1303b43$var$trim(processMatch(m)[1]);\n    if (!open()) return error(\"@container missing '{'\");\n    const style = comments().concat(rules());\n    if (!close()) return error(\"@container missing '}'\");\n    return pos({\n      type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).container,\n      container: container,\n      rules: style\n    });\n  }\n  /**\n  * Parse container.\n  */\n  function atlayer() {\n    const pos = position();\n    const m = /^@layer *([^{;@]+)/.exec(css);\n    if (!m) return;\n    const layer = $d708735ed1303b43$var$trim(processMatch(m)[1]);\n    if (!open()) {\n      const m2 = /^[;\\s]*/.exec(css);\n      if (m2) processMatch(m2);\n      return pos({\n        type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).layer,\n        layer: layer\n      });\n    }\n    const style = comments().concat(rules());\n    if (!close()) return error(\"@layer missing '}'\");\n    return pos({\n      type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).layer,\n      layer: layer,\n      rules: style\n    });\n  }\n  /**\n  * Parse media.\n  */\n  function atmedia() {\n    const pos = position();\n    const m = /^@media *([^{]+)/.exec(css);\n    if (!m) return;\n    const media = $d708735ed1303b43$var$trim(processMatch(m)[1]);\n    if (!open()) return error(\"@media missing '{'\");\n    const style = comments().concat(rules());\n    if (!close()) return error(\"@media missing '}'\");\n    return pos({\n      type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).media,\n      media: media,\n      rules: style\n    });\n  }\n  /**\n  * Parse custom-media.\n  */\n  function atcustommedia() {\n    const pos = position();\n    const m = /^@custom-media\\s+(--\\S+)\\s+([^{;\\s][^{;]*);/.exec(css);\n    if (!m) return;\n    const res = processMatch(m);\n    return pos({\n      type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).customMedia,\n      name: $d708735ed1303b43$var$trim(res[1]),\n      media: $d708735ed1303b43$var$trim(res[2])\n    });\n  }\n  /**\n  * Parse paged media.\n  */\n  function atpage() {\n    const pos = position();\n    const m = /^@page */.exec(css);\n    if (!m) return;\n    processMatch(m);\n    const sel = selector() || [];\n    if (!open()) return error(\"@page missing '{'\");\n    let decls = comments();\n    // declarations\n    let decl;\n    while (decl = declaration()) {\n      decls.push(decl);\n      decls = decls.concat(comments());\n    }\n    if (!close()) return error(\"@page missing '}'\");\n    return pos({\n      type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).page,\n      selectors: sel,\n      declarations: decls\n    });\n  }\n  /**\n  * Parse document.\n  */\n  function atdocument() {\n    const pos = position();\n    const m = /^@([-\\w]+)?document *([^{]+)/.exec(css);\n    if (!m) return;\n    const res = processMatch(m);\n    const vendor = $d708735ed1303b43$var$trim(res[1]);\n    const doc = $d708735ed1303b43$var$trim(res[2]);\n    if (!open()) return error(\"@document missing '{'\");\n    const style = comments().concat(rules());\n    if (!close()) return error(\"@document missing '}'\");\n    return pos({\n      type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).document,\n      document: doc,\n      vendor: vendor,\n      rules: style\n    });\n  }\n  /**\n  * Parse font-face.\n  */\n  function atfontface() {\n    const pos = position();\n    const m = /^@font-face\\s*/.exec(css);\n    if (!m) return;\n    processMatch(m);\n    if (!open()) return error(\"@font-face missing '{'\");\n    let decls = comments();\n    // declarations\n    let decl;\n    while (decl = declaration()) {\n      decls.push(decl);\n      decls = decls.concat(comments());\n    }\n    if (!close()) return error(\"@font-face missing '}'\");\n    return pos({\n      type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).fontFace,\n      declarations: decls\n    });\n  }\n  /**\n  * Parse starting style.\n  */\n  function atstartingstyle() {\n    const pos = position();\n    const m = /^@starting-style\\s*/.exec(css);\n    if (!m) return;\n    processMatch(m);\n    if (!open()) return error(\"@starting-style missing '{'\");\n    const style = comments().concat(rules());\n    if (!close()) return error(\"@starting-style missing '}'\");\n    return pos({\n      type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).startingStyle,\n      rules: style\n    });\n  }\n  /**\n  * Parse import\n  */\n  const atimport = _compileAtrule('import');\n  /**\n  * Parse charset\n  */\n  const atcharset = _compileAtrule('charset');\n  /**\n  * Parse namespace\n  */\n  const atnamespace = _compileAtrule('namespace');\n  /**\n  * Parse non-block at-rules\n  */\n  function _compileAtrule(name) {\n    const re = new RegExp('^@' + name + '\\\\s*((?::?[^;\\'\"]|\"(?:\\\\\\\\\"|[^\"])*?\"|\\'(?:\\\\\\\\\\'|[^\\'])*?\\')+)(?:;|$)');\n    // ^@import\\s*([^;\"']|(\"|')(?:\\\\\\2|.)*?\\2)+(;|$)\n    return function () {\n      const pos = position();\n      const m = re.exec(css);\n      if (!m) return;\n      const res = processMatch(m);\n      const ret = {\n        type: name\n      };\n      ret[name] = res[1].trim();\n      return pos(ret);\n    };\n  }\n  /**\n  * Parse at rule.\n  */\n  function atrule() {\n    if (css[0] !== '@') return;\n    return atkeyframes() || atmedia() || atcustommedia() || atsupports() || atimport() || atcharset() || atnamespace() || atdocument() || atpage() || athost() || atfontface() || atcontainer() || atstartingstyle() || atlayer();\n  }\n  /**\n  * Parse rule.\n  */\n  function rule() {\n    const pos = position();\n    const sel = selector();\n    if (!sel) return error('selector missing');\n    comments();\n    return pos({\n      type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).rule,\n      selectors: sel,\n      declarations: declarations() || []\n    });\n  }\n  return $d708735ed1303b43$var$addParent(stylesheet());\n};\n/**\n * Trim `str`.\n */\nfunction $d708735ed1303b43$var$trim(str) {\n  return str ? str.trim() : '';\n}\n/**\n * Adds non-enumerable parent node reference to each node.\n */\nfunction $d708735ed1303b43$var$addParent(obj, parent) {\n  const isNode = obj && typeof obj.type === 'string';\n  const childParent = isNode ? obj : parent;\n  for (const k in obj) {\n    const value = obj[k];\n    if (Array.isArray(value)) value.forEach(v => {\n      $d708735ed1303b43$var$addParent(v, childParent);\n    });else if (value && typeof value === 'object') $d708735ed1303b43$var$addParent(value, childParent);\n  }\n  if (isNode) Object.defineProperty(obj, 'parent', {\n    configurable: true,\n    writable: true,\n    enumerable: false,\n    value: parent || null\n  });\n  return obj;\n}\nvar $d708735ed1303b43$export$2e2bcd8739ae039 = $d708735ed1303b43$export$98e6a39c04603d36;\nclass $de9540138ed1fd01$var$Compiler {\n  constructor(options) {\n    this.level = 0;\n    this.indentation = '  ';\n    this.compress = false;\n    if (typeof options?.indent === 'string') this.indentation = options?.indent;\n    if (options?.compress) this.compress = true;\n  }\n  // We disable no-unused-vars for _position. We keep position for potential reintroduction of source-map\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  emit(str, _position) {\n    return str;\n  }\n  /**\n  * Increase, decrease or return current indentation.\n  */\n  indent(level) {\n    this.level = this.level || 1;\n    if (level) {\n      this.level += level;\n      return '';\n    }\n    return Array(this.level).join(this.indentation);\n  }\n  visit(node) {\n    switch (node.type) {\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).stylesheet:\n        return this.stylesheet(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).rule:\n        return this.rule(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).declaration:\n        return this.declaration(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).comment:\n        return this.comment(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).container:\n        return this.container(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).charset:\n        return this.charset(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).document:\n        return this.document(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).customMedia:\n        return this.customMedia(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).fontFace:\n        return this.fontFace(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).host:\n        return this.host(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).import:\n        return this.import(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).keyframes:\n        return this.keyframes(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).keyframe:\n        return this.keyframe(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).layer:\n        return this.layer(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).media:\n        return this.media(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).namespace:\n        return this.namespace(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).page:\n        return this.page(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).startingStyle:\n        return this.startingStyle(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).supports:\n        return this.supports(node);\n    }\n  }\n  mapVisit(nodes, delim) {\n    let buf = '';\n    delim = delim || '';\n    for (let i = 0, length = nodes.length; i < length; i++) {\n      buf += this.visit(nodes[i]);\n      if (delim && i < length - 1) buf += this.emit(delim);\n    }\n    return buf;\n  }\n  compile(node) {\n    if (this.compress) return node.stylesheet.rules.map(this.visit, this).join('');\n    return this.stylesheet(node);\n  }\n  /**\n  * Visit stylesheet node.\n  */\n  stylesheet(node) {\n    return this.mapVisit(node.stylesheet.rules, '\\n\\n');\n  }\n  /**\n  * Visit comment node.\n  */\n  comment(node) {\n    if (this.compress) return this.emit('', node.position);\n    return this.emit(this.indent() + '/*' + node.comment + '*/', node.position);\n  }\n  /**\n  * Visit container node.\n  */\n  container(node) {\n    if (this.compress) return this.emit('@container ' + node.container, node.position) + this.emit('{') + this.mapVisit(node.rules) + this.emit('}');\n    return this.emit(this.indent() + '@container ' + node.container, node.position) + this.emit(' {\\n' + this.indent(1)) + this.mapVisit(node.rules, '\\n\\n') + this.emit('\\n' + this.indent(-1) + this.indent() + '}');\n  }\n  /**\n  * Visit container node.\n  */\n  layer(node) {\n    if (this.compress) return this.emit('@layer ' + node.layer, node.position) + (node.rules ? this.emit('{') + this.mapVisit(node.rules) + this.emit('}') : ';');\n    return this.emit(this.indent() + '@layer ' + node.layer, node.position) + (node.rules ? this.emit(' {\\n' + this.indent(1)) + this.mapVisit(node.rules, '\\n\\n') + this.emit('\\n' + this.indent(-1) + this.indent() + '}') : ';');\n  }\n  /**\n  * Visit import node.\n  */\n  import(node) {\n    return this.emit('@import ' + node.import + ';', node.position);\n  }\n  /**\n  * Visit media node.\n  */\n  media(node) {\n    if (this.compress) return this.emit('@media ' + node.media, node.position) + this.emit('{') + this.mapVisit(node.rules) + this.emit('}');\n    return this.emit(this.indent() + '@media ' + node.media, node.position) + this.emit(' {\\n' + this.indent(1)) + this.mapVisit(node.rules, '\\n\\n') + this.emit('\\n' + this.indent(-1) + this.indent() + '}');\n  }\n  /**\n  * Visit document node.\n  */\n  document(node) {\n    const doc = '@' + (node.vendor || '') + 'document ' + node.document;\n    if (this.compress) return this.emit(doc, node.position) + this.emit('{') + this.mapVisit(node.rules) + this.emit('}');\n    return this.emit(doc, node.position) + this.emit(\"  {\\n\" + this.indent(1)) + this.mapVisit(node.rules, '\\n\\n') + this.emit(this.indent(-1) + '\\n}');\n  }\n  /**\n  * Visit charset node.\n  */\n  charset(node) {\n    return this.emit('@charset ' + node.charset + ';', node.position);\n  }\n  /**\n  * Visit namespace node.\n  */\n  namespace(node) {\n    return this.emit('@namespace ' + node.namespace + ';', node.position);\n  }\n  /**\n  * Visit container node.\n  */\n  startingStyle(node) {\n    if (this.compress) return this.emit('@starting-style', node.position) + this.emit('{') + this.mapVisit(node.rules) + this.emit('}');\n    return this.emit(this.indent() + '@starting-style', node.position) + this.emit(' {\\n' + this.indent(1)) + this.mapVisit(node.rules, '\\n\\n') + this.emit('\\n' + this.indent(-1) + this.indent() + '}');\n  }\n  /**\n  * Visit supports node.\n  */\n  supports(node) {\n    if (this.compress) return this.emit('@supports ' + node.supports, node.position) + this.emit('{') + this.mapVisit(node.rules) + this.emit('}');\n    return this.emit(this.indent() + '@supports ' + node.supports, node.position) + this.emit(' {\\n' + this.indent(1)) + this.mapVisit(node.rules, '\\n\\n') + this.emit('\\n' + this.indent(-1) + this.indent() + '}');\n  }\n  /**\n  * Visit keyframes node.\n  */\n  keyframes(node) {\n    if (this.compress) return this.emit('@' + (node.vendor || '') + 'keyframes ' + node.name, node.position) + this.emit('{') + this.mapVisit(node.keyframes) + this.emit('}');\n    return this.emit('@' + (node.vendor || '') + 'keyframes ' + node.name, node.position) + this.emit(' {\\n' + this.indent(1)) + this.mapVisit(node.keyframes, '\\n') + this.emit(this.indent(-1) + '}');\n  }\n  /**\n  * Visit keyframe node.\n  */\n  keyframe(node) {\n    const decls = node.declarations;\n    if (this.compress) return this.emit(node.values.join(','), node.position) + this.emit('{') + this.mapVisit(decls) + this.emit('}');\n    return this.emit(this.indent()) + this.emit(node.values.join(', '), node.position) + this.emit(' {\\n' + this.indent(1)) + this.mapVisit(decls, '\\n') + this.emit(this.indent(-1) + '\\n' + this.indent() + '}\\n');\n  }\n  /**\n  * Visit page node.\n  */\n  page(node) {\n    if (this.compress) {\n      const sel = node.selectors.length ? node.selectors.join(', ') : '';\n      return this.emit('@page ' + sel, node.position) + this.emit('{') + this.mapVisit(node.declarations) + this.emit('}');\n    }\n    const sel = node.selectors.length ? node.selectors.join(', ') + ' ' : '';\n    return this.emit('@page ' + sel, node.position) + this.emit('{\\n') + this.emit(this.indent(1)) + this.mapVisit(node.declarations, '\\n') + this.emit(this.indent(-1)) + this.emit('\\n}');\n  }\n  /**\n  * Visit font-face node.\n  */\n  fontFace(node) {\n    if (this.compress) return this.emit('@font-face', node.position) + this.emit('{') + this.mapVisit(node.declarations) + this.emit('}');\n    return this.emit('@font-face ', node.position) + this.emit('{\\n') + this.emit(this.indent(1)) + this.mapVisit(node.declarations, '\\n') + this.emit(this.indent(-1)) + this.emit('\\n}');\n  }\n  /**\n  * Visit host node.\n  */\n  host(node) {\n    if (this.compress) return this.emit('@host', node.position) + this.emit('{') + this.mapVisit(node.rules) + this.emit('}');\n    return this.emit('@host', node.position) + this.emit(' {\\n' + this.indent(1)) + this.mapVisit(node.rules, '\\n\\n') + this.emit(this.indent(-1) + '\\n}');\n  }\n  /**\n  * Visit custom-media node.\n  */\n  customMedia(node) {\n    return this.emit('@custom-media ' + node.name + ' ' + node.media + ';', node.position);\n  }\n  /**\n  * Visit rule node.\n  */\n  rule(node) {\n    const decls = node.declarations;\n    if (!decls.length) return '';\n    if (this.compress) return this.emit(node.selectors.join(','), node.position) + this.emit('{') + this.mapVisit(decls) + this.emit('}');\n    const indent = this.indent();\n    return this.emit(node.selectors.map(s => {\n      return indent + s;\n    }).join(',\\n'), node.position) + this.emit(' {\\n') + this.emit(this.indent(1)) + this.mapVisit(decls, '\\n') + this.emit(this.indent(-1)) + this.emit('\\n' + this.indent() + '}');\n  }\n  /**\n  * Visit declaration node.\n  */\n  declaration(node) {\n    if (this.compress) return this.emit(node.property + ':' + node.value, node.position) + this.emit(';');\n    if (node.property === 'grid-template-areas') return this.emit(this.indent()) + this.emit(node.property + ': ' + node.value.split('\\n').join('\\n'.padEnd(22) + this.indent()), node.position) + this.emit(';');\n    return this.emit(this.indent()) + this.emit(node.property + ': ' + node.value, node.position) + this.emit(';');\n  }\n}\nvar $de9540138ed1fd01$export$2e2bcd8739ae039 = $de9540138ed1fd01$var$Compiler;\nvar $fdf773ab87e20450$export$2e2bcd8739ae039 = (node, options) => {\n  const compiler = new (0, $de9540138ed1fd01$export$2e2bcd8739ae039)(options || {});\n  return compiler.compile(node);\n};\nconst $149c1bd638913645$export$98e6a39c04603d36 = (0, $d708735ed1303b43$export$2e2bcd8739ae039);\nconst $149c1bd638913645$export$fac44ee5b035f737 = (0, $fdf773ab87e20450$export$2e2bcd8739ae039);\nvar $149c1bd638913645$export$2e2bcd8739ae039 = {\n  parse: $149c1bd638913645$export$98e6a39c04603d36,\n  stringify: $149c1bd638913645$export$fac44ee5b035f737\n};\nexport { $149c1bd638913645$export$98e6a39c04603d36 as parse, $149c1bd638913645$export$fac44ee5b035f737 as stringify, $149c1bd638913645$export$2e2bcd8739ae039 as default, $b2e137848b48cf4f$export$9be5dd6e61d5d73a as CssTypes };","map":{"version":3,"names":["$009ddb00d3ec72b8$export$2e2bcd8739ae039","Error","constructor","filename","msg","lineno","column","css","reason","line","source","$0865a9fb4cc365fe$export$2e2bcd8739ae039","start","end","$b2e137848b48cf4f$export$9be5dd6e61d5d73a","CssTypes","$6d129ebf064c486f$export$82eb5486fce3d340","$6d129ebf064c486f$export$c8b95ffeec50f24a","string","search","position","currentPosition","maxLoop","all","map","v","indexOf","push","foundAll","filter","length","found","Math","min","$6d129ebf064c486f$export$b8d42a8583d2e477","currentSearchPosition","firstMatchPos","char","endPosition","endQuotePosition","$6d129ebf064c486f$export$801dd37ac183521b","result","index","substring","$d708735ed1303b43$var$commentre","$d708735ed1303b43$export$98e6a39c04603d36","options","updatePosition","str","lines","match","i","lastIndexOf","node","whitespace","errorsList","error","err","silent","stylesheet","rulesList","rules","type","parsingErrors","open","openMatch","exec","processMatch","close","closeMatch","comments","charAt","atrule","rule","m","slice","c","comment","pos","selector","res","$d708735ed1303b43$var$trim","replace","declaration","propMatch","propValue","sepratotorMatch","value","endValuePosition","fakeMatch","ret","property","endMatch","declarations","decls","decl","keyframe","vals","spacesMatch","values","atkeyframes","m1","vendor","m2","name","frame","frames","concat","keyframes","atsupports","supports","style","athost","host","atcontainer","container","atlayer","layer","atmedia","media","atcustommedia","customMedia","atpage","sel","page","selectors","atdocument","doc","document","atfontface","fontFace","atstartingstyle","startingStyle","atimport","_compileAtrule","atcharset","atnamespace","re","RegExp","trim","$d708735ed1303b43$var$addParent","obj","parent","isNode","childParent","k","Array","isArray","forEach","Object","defineProperty","configurable","writable","enumerable","$d708735ed1303b43$export$2e2bcd8739ae039","$de9540138ed1fd01$var$Compiler","level","indentation","compress","indent","emit","_position","join","visit","charset","import","namespace","mapVisit","nodes","delim","buf","compile","s","split","padEnd","$de9540138ed1fd01$export$2e2bcd8739ae039","$fdf773ab87e20450$export$2e2bcd8739ae039","compiler","$149c1bd638913645$export$98e6a39c04603d36","$149c1bd638913645$export$fac44ee5b035f737","$149c1bd638913645$export$2e2bcd8739ae039"],"sources":["/goinfre/aait-our/morotote_frontend/node_modules/@adobe/css-tools/dist/src/index.ts","/goinfre/aait-our/morotote_frontend/node_modules/@adobe/css-tools/dist/src/parse/index.ts","/goinfre/aait-our/morotote_frontend/node_modules/@adobe/css-tools/dist/src/CssParseError.ts","/goinfre/aait-our/morotote_frontend/node_modules/@adobe/css-tools/dist/src/CssPosition.ts","/goinfre/aait-our/morotote_frontend/node_modules/@adobe/css-tools/dist/src/type.ts","/goinfre/aait-our/morotote_frontend/node_modules/@adobe/css-tools/dist/src/utils/stringSearch.ts","/goinfre/aait-our/morotote_frontend/node_modules/@adobe/css-tools/dist/src/stringify/index.ts","/goinfre/aait-our/morotote_frontend/node_modules/@adobe/css-tools/dist/src/stringify/compiler.ts"],"sourcesContent":["import {default as parseFn} from './parse';\nimport {default as stringifyFn} from './stringify';\nexport const parse = parseFn;\nexport const stringify = stringifyFn;\nexport * from './type';\nexport * from './CssParseError';\nexport * from './CssPosition';\nexport default {parse, stringify};\n","import CssParseError from '../CssParseError';\nimport Position from '../CssPosition';\nimport {\n  CssAtRuleAST,\n  CssCharsetAST,\n  CssCommentAST,\n  CssCommonPositionAST,\n  CssContainerAST,\n  CssCustomMediaAST,\n  CssDeclarationAST,\n  CssDocumentAST,\n  CssFontFaceAST,\n  CssHostAST,\n  CssImportAST,\n  CssKeyframeAST,\n  CssKeyframesAST,\n  CssLayerAST,\n  CssMediaAST,\n  CssNamespaceAST,\n  CssPageAST,\n  CssRuleAST,\n  CssStartingStyleAST,\n  CssStylesheetAST,\n  CssSupportsAST,\n  CssTypes,\n} from '../type';\nimport {\n  indexOfArrayWithBracketAndQuoteSupport,\n  splitWithBracketAndQuoteSupport,\n} from '../utils/stringSearch';\n\n// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\n// New rule => https://www.w3.org/TR/CSS22/syndata.html#comments\n// [^] is equivalent to [.\\n\\r]\nconst commentre = /\\/\\*[^]*?(?:\\*\\/|$)/g;\n\nexport const parse = (\n  css: string,\n  options?: {source?: string; silent?: boolean},\n): CssStylesheetAST => {\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  let lineno = 1;\n  let column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   */\n  function updatePosition(str: string) {\n    const lines = str.match(/\\n/g);\n    if (lines) {\n      lineno += lines.length;\n    }\n    const i = str.lastIndexOf('\\n');\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   */\n  function position() {\n    const start = {line: lineno, column: column};\n    return function <T1 extends CssCommonPositionAST>(\n      node: Omit<T1, 'position'>,\n    ): T1 {\n      (node as T1).position = new Position(\n        start,\n        {line: lineno, column: column},\n        options?.source || '',\n      );\n      whitespace();\n      return node as T1;\n    };\n  }\n\n  /**\n   * Error `msg`.\n   */\n  const errorsList: Array<CssParseError> = [];\n\n  function error(msg: string) {\n    const err = new CssParseError(\n      options?.source || '',\n      msg,\n      lineno,\n      column,\n      css,\n    );\n\n    if (options?.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Parse stylesheet.\n   */\n  function stylesheet(): CssStylesheetAST {\n    const rulesList = rules();\n\n    const result: CssStylesheetAST = {\n      type: CssTypes.stylesheet,\n      stylesheet: {\n        source: options?.source,\n        rules: rulesList,\n        parsingErrors: errorsList,\n      },\n    };\n\n    return result;\n  }\n\n  /**\n   * Opening brace.\n   */\n  function open(): boolean {\n    const openMatch = /^{\\s*/.exec(css);\n    if (openMatch) {\n      processMatch(openMatch);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Closing brace.\n   */\n  function close() {\n    const closeMatch = /^}/.exec(css);\n    if (closeMatch) {\n      processMatch(closeMatch);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Parse ruleset.\n   */\n  function rules() {\n    let node: CssRuleAST | CssAtRuleAST | void;\n    const rules: Array<CssRuleAST | CssAtRuleAST> = [];\n    whitespace();\n    comments(rules);\n    while (css.length && css.charAt(0) !== '}' && (node = atrule() || rule())) {\n      if (node) {\n        rules.push(node);\n        comments(rules);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Update position and css string. Return the matches\n   */\n  function processMatch(m: RegExpExecArray) {\n    const str = m[0];\n    updatePosition(str);\n    css = css.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    const m = /^\\s*/.exec(css);\n    if (m) {\n      processMatch(m);\n    }\n  }\n\n  /**\n   * Parse comments;\n   */\n  function comments<T1 extends CssCommonPositionAST>(\n    rules?: Array<T1 | CssCommentAST>,\n  ) {\n    let c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   */\n  function comment(): CssCommentAST | void {\n    const pos = position();\n    if ('/' !== css.charAt(0) || '*' !== css.charAt(1)) {\n      return;\n    }\n\n    const m = /^\\/\\*[^]*?\\*\\//.exec(css);\n    if (!m) {\n      return error('End of comment missing');\n    }\n    processMatch(m);\n\n    return pos<CssCommentAST>({\n      type: CssTypes.comment,\n      comment: m[0].slice(2, -2),\n    });\n  }\n\n  /**\n   * Parse selector.\n   */\n  function selector() {\n    const m = /^([^{]+)/.exec(css);\n    if (!m) {\n      return;\n    }\n    processMatch(m);\n\n    // remove comment in selector;\n    const res = trim(m[0]).replace(commentre, '');\n\n    return splitWithBracketAndQuoteSupport(res, [',']).map(v => trim(v));\n  }\n\n  /**\n   * Parse declaration.\n   */\n  function declaration(): CssDeclarationAST | void {\n    const pos = position();\n\n    // prop\n    const propMatch = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/.exec(css);\n    if (!propMatch) {\n      return;\n    }\n    processMatch(propMatch);\n    const propValue = trim(propMatch[0]);\n\n    // :\n    const sepratotorMatch = /^:\\s*/.exec(css);\n    if (!sepratotorMatch) {\n      return error(\"property missing ':'\");\n    }\n    processMatch(sepratotorMatch);\n\n    // val\n    let value = '';\n    const endValuePosition = indexOfArrayWithBracketAndQuoteSupport(css, [\n      ';',\n      '}',\n    ]);\n    if (endValuePosition !== -1) {\n      value = css.substring(0, endValuePosition);\n      const fakeMatch = [value] as unknown as RegExpExecArray;\n      processMatch(fakeMatch);\n\n      value = trim(value).replace(commentre, '');\n    }\n\n    const ret = pos<CssDeclarationAST>({\n      type: CssTypes.declaration,\n      property: propValue.replace(commentre, ''),\n      value: value,\n    });\n\n    // ;\n    const endMatch = /^[;\\s]*/.exec(css);\n    if (endMatch) {\n      processMatch(endMatch);\n    }\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   */\n  function declarations() {\n    const decls: Array<CssDeclarationAST | CssCommentAST> = [];\n\n    if (!open()) {\n      return error(\"missing '{'\");\n    }\n    comments(decls);\n\n    // declarations\n    let decl;\n    while ((decl = declaration())) {\n      if (decl) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    if (!close()) {\n      return error(\"missing '}'\");\n    }\n    return decls;\n  }\n\n  /**\n   * Parse keyframe.\n   */\n  function keyframe() {\n    let m;\n    const vals = [];\n    const pos = position();\n\n    while ((m = /^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/.exec(css))) {\n      const res = processMatch(m);\n      vals.push(res[1]);\n      const spacesMatch = /^,\\s*/.exec(css);\n      if (spacesMatch) {\n        processMatch(spacesMatch);\n      }\n    }\n\n    if (!vals.length) {\n      return;\n    }\n\n    return pos<CssKeyframeAST>({\n      type: CssTypes.keyframe,\n      values: vals,\n      declarations: declarations() || [],\n    });\n  }\n\n  /**\n   * Parse keyframes.\n   */\n  function atkeyframes(): CssKeyframesAST | void {\n    const pos = position();\n    const m1 = /^@([-\\w]+)?keyframes\\s*/.exec(css);\n\n    if (!m1) {\n      return;\n    }\n    const vendor = processMatch(m1)[1];\n\n    // identifier\n    const m2 = /^([-\\w]+)\\s*/.exec(css);\n    if (!m2) {\n      return error('@keyframes missing name');\n    }\n    const name = processMatch(m2)[1];\n\n    if (!open()) {\n      return error(\"@keyframes missing '{'\");\n    }\n\n    let frame;\n    let frames: Array<CssKeyframeAST | CssCommentAST> = comments();\n    while ((frame = keyframe())) {\n      frames.push(frame);\n      frames = frames.concat(comments());\n    }\n\n    if (!close()) {\n      return error(\"@keyframes missing '}'\");\n    }\n\n    return pos<CssKeyframesAST>({\n      type: CssTypes.keyframes,\n      name: name,\n      vendor: vendor,\n      keyframes: frames,\n    });\n  }\n\n  /**\n   * Parse supports.\n   */\n  function atsupports(): CssSupportsAST | void {\n    const pos = position();\n    const m = /^@supports *([^{]+)/.exec(css);\n\n    if (!m) {\n      return;\n    }\n    const supports = trim(processMatch(m)[1]);\n\n    if (!open()) {\n      return error(\"@supports missing '{'\");\n    }\n\n    const style = comments<CssAtRuleAST>().concat(rules());\n\n    if (!close()) {\n      return error(\"@supports missing '}'\");\n    }\n\n    return pos<CssSupportsAST>({\n      type: CssTypes.supports,\n      supports: supports,\n      rules: style,\n    });\n  }\n\n  /**\n   * Parse host.\n   */\n  function athost() {\n    const pos = position();\n    const m = /^@host\\s*/.exec(css);\n\n    if (!m) {\n      return;\n    }\n    processMatch(m);\n\n    if (!open()) {\n      return error(\"@host missing '{'\");\n    }\n\n    const style = comments<CssAtRuleAST>().concat(rules());\n\n    if (!close()) {\n      return error(\"@host missing '}'\");\n    }\n\n    return pos<CssHostAST>({\n      type: CssTypes.host,\n      rules: style,\n    });\n  }\n\n  /**\n   * Parse container.\n   */\n  function atcontainer(): CssContainerAST | void {\n    const pos = position();\n    const m = /^@container *([^{]+)/.exec(css);\n\n    if (!m) {\n      return;\n    }\n    const container = trim(processMatch(m)[1]);\n\n    if (!open()) {\n      return error(\"@container missing '{'\");\n    }\n\n    const style = comments<CssAtRuleAST>().concat(rules());\n\n    if (!close()) {\n      return error(\"@container missing '}'\");\n    }\n\n    return pos<CssContainerAST>({\n      type: CssTypes.container,\n      container: container,\n      rules: style,\n    });\n  }\n\n  /**\n   * Parse container.\n   */\n  function atlayer(): CssLayerAST | void {\n    const pos = position();\n    const m = /^@layer *([^{;@]+)/.exec(css);\n\n    if (!m) {\n      return;\n    }\n    const layer = trim(processMatch(m)[1]);\n\n    if (!open()) {\n      const m2 = /^[;\\s]*/.exec(css);\n      if (m2) {\n        processMatch(m2);\n      }\n      return pos<CssLayerAST>({\n        type: CssTypes.layer,\n        layer: layer,\n      });\n    }\n\n    const style = comments<CssAtRuleAST>().concat(rules());\n\n    if (!close()) {\n      return error(\"@layer missing '}'\");\n    }\n\n    return pos<CssLayerAST>({\n      type: CssTypes.layer,\n      layer: layer,\n      rules: style,\n    });\n  }\n\n  /**\n   * Parse media.\n   */\n  function atmedia(): CssMediaAST | void {\n    const pos = position();\n    const m = /^@media *([^{]+)/.exec(css);\n\n    if (!m) {\n      return;\n    }\n    const media = trim(processMatch(m)[1]);\n\n    if (!open()) {\n      return error(\"@media missing '{'\");\n    }\n\n    const style = comments<CssAtRuleAST>().concat(rules());\n\n    if (!close()) {\n      return error(\"@media missing '}'\");\n    }\n\n    return pos<CssMediaAST>({\n      type: CssTypes.media,\n      media: media,\n      rules: style,\n    });\n  }\n\n  /**\n   * Parse custom-media.\n   */\n  function atcustommedia(): CssCustomMediaAST | void {\n    const pos = position();\n    const m = /^@custom-media\\s+(--\\S+)\\s+([^{;\\s][^{;]*);/.exec(css);\n    if (!m) {\n      return;\n    }\n    const res = processMatch(m);\n\n    return pos<CssCustomMediaAST>({\n      type: CssTypes.customMedia,\n      name: trim(res[1]),\n      media: trim(res[2]),\n    });\n  }\n\n  /**\n   * Parse paged media.\n   */\n  function atpage(): CssPageAST | void {\n    const pos = position();\n    const m = /^@page */.exec(css);\n    if (!m) {\n      return;\n    }\n    processMatch(m);\n\n    const sel = selector() || [];\n\n    if (!open()) {\n      return error(\"@page missing '{'\");\n    }\n    let decls = comments<CssDeclarationAST>();\n\n    // declarations\n    let decl;\n    while ((decl = declaration())) {\n      decls.push(decl);\n      decls = decls.concat(comments());\n    }\n\n    if (!close()) {\n      return error(\"@page missing '}'\");\n    }\n\n    return pos<CssPageAST>({\n      type: CssTypes.page,\n      selectors: sel,\n      declarations: decls,\n    });\n  }\n\n  /**\n   * Parse document.\n   */\n  function atdocument(): CssDocumentAST | void {\n    const pos = position();\n    const m = /^@([-\\w]+)?document *([^{]+)/.exec(css);\n    if (!m) {\n      return;\n    }\n    const res = processMatch(m);\n\n    const vendor = trim(res[1]);\n    const doc = trim(res[2]);\n\n    if (!open()) {\n      return error(\"@document missing '{'\");\n    }\n\n    const style = comments<CssAtRuleAST>().concat(rules());\n\n    if (!close()) {\n      return error(\"@document missing '}'\");\n    }\n\n    return pos<CssDocumentAST>({\n      type: CssTypes.document,\n      document: doc,\n      vendor: vendor,\n      rules: style,\n    });\n  }\n\n  /**\n   * Parse font-face.\n   */\n  function atfontface(): CssFontFaceAST | void {\n    const pos = position();\n    const m = /^@font-face\\s*/.exec(css);\n    if (!m) {\n      return;\n    }\n    processMatch(m);\n\n    if (!open()) {\n      return error(\"@font-face missing '{'\");\n    }\n    let decls = comments<CssDeclarationAST>();\n\n    // declarations\n    let decl;\n    while ((decl = declaration())) {\n      decls.push(decl);\n      decls = decls.concat(comments());\n    }\n\n    if (!close()) {\n      return error(\"@font-face missing '}'\");\n    }\n\n    return pos<CssFontFaceAST>({\n      type: CssTypes.fontFace,\n      declarations: decls,\n    });\n  }\n\n  /**\n   * Parse starting style.\n   */\n  function atstartingstyle(): CssStartingStyleAST | void {\n    const pos = position();\n    const m = /^@starting-style\\s*/.exec(css);\n    if (!m) {\n      return;\n    }\n    processMatch(m);\n\n    if (!open()) {\n      return error(\"@starting-style missing '{'\");\n    }\n    const style = comments<CssAtRuleAST>().concat(rules());\n\n    if (!close()) {\n      return error(\"@starting-style missing '}'\");\n    }\n\n    return pos<CssStartingStyleAST>({\n      type: CssTypes.startingStyle,\n      rules: style,\n    });\n  }\n\n  /**\n   * Parse import\n   */\n  const atimport = _compileAtrule<CssImportAST>('import');\n\n  /**\n   * Parse charset\n   */\n  const atcharset = _compileAtrule<CssCharsetAST>('charset');\n\n  /**\n   * Parse namespace\n   */\n  const atnamespace = _compileAtrule<CssNamespaceAST>('namespace');\n\n  /**\n   * Parse non-block at-rules\n   */\n  function _compileAtrule<T1 extends CssCommonPositionAST>(\n    name: string,\n  ): () => T1 | void {\n    const re = new RegExp(\n      '^@' +\n        name +\n        '\\\\s*((?::?[^;\\'\"]|\"(?:\\\\\\\\\"|[^\"])*?\"|\\'(?:\\\\\\\\\\'|[^\\'])*?\\')+)(?:;|$)',\n    );\n\n    // ^@import\\s*([^;\"']|(\"|')(?:\\\\\\2|.)*?\\2)+(;|$)\n\n    return function (): T1 | void {\n      const pos = position();\n      const m = re.exec(css);\n      if (!m) {\n        return;\n      }\n      const res = processMatch(m);\n      const ret: Record<string, string> = {type: name};\n      ret[name] = res[1].trim();\n      return pos<T1>(ret as unknown as T1) as T1;\n    };\n  }\n\n  /**\n   * Parse at rule.\n   */\n  function atrule(): CssAtRuleAST | void {\n    if (css[0] !== '@') {\n      return;\n    }\n\n    return (\n      atkeyframes() ||\n      atmedia() ||\n      atcustommedia() ||\n      atsupports() ||\n      atimport() ||\n      atcharset() ||\n      atnamespace() ||\n      atdocument() ||\n      atpage() ||\n      athost() ||\n      atfontface() ||\n      atcontainer() ||\n      atstartingstyle() ||\n      atlayer()\n    );\n  }\n\n  /**\n   * Parse rule.\n   */\n  function rule() {\n    const pos = position();\n    const sel = selector();\n\n    if (!sel) {\n      return error('selector missing');\n    }\n    comments();\n\n    return pos<CssRuleAST>({\n      type: CssTypes.rule,\n      selectors: sel,\n      declarations: declarations() || [],\n    });\n  }\n\n  return addParent(stylesheet());\n};\n\n/**\n * Trim `str`.\n */\nfunction trim(str: string) {\n  return str ? str.trim() : '';\n}\n\n/**\n * Adds non-enumerable parent node reference to each node.\n */\nfunction addParent<T1 extends {type?: string}>(obj: T1, parent?: unknown): T1 {\n  const isNode = obj && typeof obj.type === 'string';\n  const childParent = isNode ? obj : parent;\n\n  for (const k in obj) {\n    const value = obj[k];\n    if (Array.isArray(value)) {\n      value.forEach(v => {\n        addParent(v, childParent);\n      });\n    } else if (value && typeof value === 'object') {\n      addParent(value, childParent);\n    }\n  }\n\n  if (isNode) {\n    Object.defineProperty(obj, 'parent', {\n      configurable: true,\n      writable: true,\n      enumerable: false,\n      value: parent || null,\n    });\n  }\n\n  return obj;\n}\n\nexport default parse;\n","export default class CssParseError extends Error {\n  readonly reason: string;\n  readonly filename?: string;\n  readonly line: number;\n  readonly column: number;\n  readonly source: string;\n\n  constructor(\n    filename: string,\n    msg: string,\n    lineno: number,\n    column: number,\n    css: string,\n  ) {\n    super(filename + ':' + lineno + ':' + column + ': ' + msg);\n    this.reason = msg;\n    this.filename = filename;\n    this.line = lineno;\n    this.column = column;\n    this.source = css;\n  }\n}\n","/**\n * Store position information for a node\n */\nexport default class Position {\n  start: {line: number; column: number};\n  end: {line: number; column: number};\n  source?: string;\n\n  constructor(\n    start: {line: number; column: number},\n    end: {line: number; column: number},\n    source: string,\n  ) {\n    this.start = start;\n    this.end = end;\n    this.source = source;\n  }\n}\n","import CssParseError from './CssParseError';\nimport Position from './CssPosition';\n\nexport enum CssTypes {\n  stylesheet = 'stylesheet',\n  rule = 'rule',\n  declaration = 'declaration',\n  comment = 'comment',\n  container = 'container',\n  charset = 'charset',\n  document = 'document',\n  customMedia = 'custom-media',\n  fontFace = 'font-face',\n  host = 'host',\n  import = 'import',\n  keyframes = 'keyframes',\n  keyframe = 'keyframe',\n  layer = 'layer',\n  media = 'media',\n  namespace = 'namespace',\n  page = 'page',\n  startingStyle = 'starting-style',\n  supports = 'supports',\n}\n\nexport type CssCommonAST = {\n  type: CssTypes;\n};\n\nexport type CssCommonPositionAST = CssCommonAST & {\n  position?: Position;\n  parent?: unknown;\n};\n\nexport type CssStylesheetAST = CssCommonAST & {\n  type: CssTypes.stylesheet;\n  stylesheet: {\n    source?: string;\n    rules: Array<CssAtRuleAST>;\n    parsingErrors?: Array<CssParseError>;\n  };\n};\n\nexport type CssRuleAST = CssCommonPositionAST & {\n  type: CssTypes.rule;\n  selectors: Array<string>;\n  declarations: Array<CssDeclarationAST | CssCommentAST>;\n};\n\nexport type CssDeclarationAST = CssCommonPositionAST & {\n  type: CssTypes.declaration;\n  property: string;\n  value: string;\n};\n\nexport type CssCommentAST = CssCommonPositionAST & {\n  type: CssTypes.comment;\n  comment: string;\n};\nexport type CssContainerAST = CssCommonPositionAST & {\n  type: CssTypes.container;\n  container: string;\n  rules: Array<CssAtRuleAST>;\n};\n\nexport type CssCharsetAST = CssCommonPositionAST & {\n  type: CssTypes.charset;\n  charset: string;\n};\nexport type CssCustomMediaAST = CssCommonPositionAST & {\n  type: CssTypes.customMedia;\n  name: string;\n  media: string;\n};\nexport type CssDocumentAST = CssCommonPositionAST & {\n  type: CssTypes.document;\n  document: string;\n  vendor?: string;\n  rules: Array<CssAtRuleAST>;\n};\nexport type CssFontFaceAST = CssCommonPositionAST & {\n  type: CssTypes.fontFace;\n  declarations: Array<CssDeclarationAST | CssCommentAST>;\n};\nexport type CssHostAST = CssCommonPositionAST & {\n  type: CssTypes.host;\n  rules: Array<CssAtRuleAST>;\n};\nexport type CssImportAST = CssCommonPositionAST & {\n  type: CssTypes.import;\n  import: string;\n};\nexport type CssKeyframesAST = CssCommonPositionAST & {\n  type: CssTypes.keyframes;\n  name: string;\n  vendor?: string;\n  keyframes: Array<CssKeyframeAST | CssCommentAST>;\n};\nexport type CssKeyframeAST = CssCommonPositionAST & {\n  type: CssTypes.keyframe;\n  values: Array<string>;\n  declarations: Array<CssDeclarationAST | CssCommentAST>;\n};\nexport type CssLayerAST = CssCommonPositionAST & {\n  type: CssTypes.layer;\n  layer: string;\n  rules?: Array<CssAtRuleAST>;\n};\nexport type CssMediaAST = CssCommonPositionAST & {\n  type: CssTypes.media;\n  media: string;\n  rules: Array<CssAtRuleAST>;\n};\nexport type CssNamespaceAST = CssCommonPositionAST & {\n  type: CssTypes.namespace;\n  namespace: string;\n};\nexport type CssPageAST = CssCommonPositionAST & {\n  type: CssTypes.page;\n  selectors: Array<string>;\n  declarations: Array<CssDeclarationAST | CssCommentAST>;\n};\nexport type CssSupportsAST = CssCommonPositionAST & {\n  type: CssTypes.supports;\n  supports: string;\n  rules: Array<CssAtRuleAST>;\n};\n\nexport type CssStartingStyleAST = CssCommonPositionAST & {\n  type: CssTypes.startingStyle;\n  rules: Array<CssAtRuleAST>;\n};\n\nexport type CssAtRuleAST =\n  | CssRuleAST\n  | CssCommentAST\n  | CssContainerAST\n  | CssCharsetAST\n  | CssCustomMediaAST\n  | CssDocumentAST\n  | CssFontFaceAST\n  | CssHostAST\n  | CssImportAST\n  | CssKeyframesAST\n  | CssLayerAST\n  | CssMediaAST\n  | CssNamespaceAST\n  | CssPageAST\n  | CssSupportsAST\n  | CssStartingStyleAST;\n\nexport type CssAllNodesAST =\n  | CssAtRuleAST\n  | CssStylesheetAST\n  | CssDeclarationAST\n  | CssKeyframeAST;\n","export const MAX_LOOP = 10000;\n\n/**\n * Find the first occurrence of any search string in the input string, ignoring escaped characters\n * @param string - The input string to search in\n * @param search - Array of strings to search for\n * @param position - Optional starting position for the search\n * @returns The index of the first match, or -1 if not found\n * @throws {Error} If too many escape sequences are encountered (> MAX_LOOP)\n * @example\n * ```ts\n * // Basic search\n * indexOfArrayNonEscaped('a,b,c', [',']) // 1\n *\n * // Handles escaped characters\n * indexOfArrayNonEscaped('a\\\\,b,c', [',']) // 4, the first comma is escaped\n * ```\n */\nexport const indexOfArrayNonEscaped = (\n  string: string,\n  search: Array<string>,\n  position?: number,\n): number => {\n  let currentPosition = position;\n  let maxLoop = MAX_LOOP;\n  do {\n    const all = search.map(v => string.indexOf(v, currentPosition));\n    all.push(string.indexOf('\\\\', currentPosition));\n    const foundAll = all.filter(v => v !== -1);\n    if (foundAll.length === 0) {\n      return -1;\n    }\n\n    const found = Math.min(...foundAll);\n    if (string[found] === '\\\\') {\n      currentPosition = found + 2;\n      maxLoop--;\n    } else {\n      return found;\n    }\n  } while (maxLoop > 0);\n\n  throw new Error('Too many escaping');\n};\n\n/**\n * Find the first occurrence of any search string in the input string, respecting brackets and quotes\n * @param string - The input string to search in\n * @param search - Array of strings to search for\n * @param position - Optional starting position for the search\n * @returns The index of the first match, or -1 if not found\n * @throws {Error} If too many escape sequences are encountered (> MAX_LOOP)\n * @example\n * ```ts\n * // Basic search\n * indexOfArrayWithBracketAndQuoteSupport('a,b,c', [',']) // 1\n *\n * // Respects brackets - won't match inside ()\n * indexOfArrayWithBracketAndQuoteSupport('(a,b),c', [',']) // 4, ignores the comma inside ()\n *\n * // Respects quotes - won't match inside quotes\n * indexOfArrayWithBracketAndQuoteSupport('\"a,b\",c', [',']) // 4, ignores the comma inside quotes\n * indexOfArrayWithBracketAndQuoteSupport(\"'a,b',c\", [',']) // 4, ignores the comma inside quotes\n *\n * // Handles escaped characters\n * indexOfArrayWithBracketAndQuoteSupport('a\\\\,b,c', [',']) // 4, the first comma is escaped\n * ```\n */\nexport const indexOfArrayWithBracketAndQuoteSupport = (\n  string: string,\n  search: Array<string>,\n  position?: number,\n): number => {\n  let currentSearchPosition = position;\n  let maxLoop = MAX_LOOP;\n\n  do {\n    const all = search.map(v => string.indexOf(v, currentSearchPosition));\n\n    all.push(string.indexOf('(', currentSearchPosition));\n    all.push(string.indexOf('\"', currentSearchPosition));\n    all.push(string.indexOf(\"'\", currentSearchPosition));\n    all.push(string.indexOf('\\\\', currentSearchPosition));\n\n    const foundAll = all.filter(v => v !== -1);\n    if (foundAll.length === 0) {\n      return -1;\n    }\n\n    const firstMatchPos = Math.min(...foundAll);\n    const char = string[firstMatchPos];\n    switch (char) {\n      case '\\\\':\n        currentSearchPosition = firstMatchPos + 2;\n        break;\n      case '(':\n        {\n          const endPosition = indexOfArrayWithBracketAndQuoteSupport(\n            string,\n            [')'],\n            firstMatchPos + 1,\n          );\n          if (endPosition === -1) {\n            return -1;\n          }\n          currentSearchPosition = endPosition + 1;\n        }\n        break;\n      case '\"':\n        {\n          const endQuotePosition = indexOfArrayNonEscaped(\n            string,\n            ['\"'],\n            firstMatchPos + 1,\n          );\n          if (endQuotePosition === -1) {\n            return -1;\n          }\n          currentSearchPosition = endQuotePosition + 1;\n        }\n        break;\n      case \"'\":\n        {\n          const endQuotePosition = indexOfArrayNonEscaped(\n            string,\n            [\"'\"],\n            firstMatchPos + 1,\n          );\n          if (endQuotePosition === -1) {\n            return -1;\n          }\n          currentSearchPosition = endQuotePosition + 1;\n        }\n        break;\n      default:\n        return firstMatchPos;\n    }\n    maxLoop--;\n  } while (maxLoop > 0);\n\n  throw new Error('Too many escaping');\n};\n\n/**\n * Split a string by search tokens, respecting brackets and quotes\n * @example\n * ```ts\n * splitWithBracketAndQuoteSupport('a,b', [',']) // ['a', 'b']\n * splitWithBracketAndQuoteSupport('a,(b,c)', [',']) // ['a', '(b,c)']\n * splitWithBracketAndQuoteSupport('a,\"b,c\"', [',']) // ['a', '\"b,c\"']\n * splitWithBracketAndQuoteSupport(\"a,'b,c'\", [',']) // ['a', \"'b,c'\"]\n * ```\n */\nexport const splitWithBracketAndQuoteSupport = (\n  string: string,\n  search: Array<string>,\n): Array<string> => {\n  const result: Array<string> = [];\n  let currentPosition = 0;\n  while (currentPosition < string.length) {\n    const index = indexOfArrayWithBracketAndQuoteSupport(\n      string,\n      search,\n      currentPosition,\n    );\n    if (index === -1) {\n      result.push(string.substring(currentPosition));\n      return result;\n    }\n    result.push(string.substring(currentPosition, index));\n    currentPosition = index + 1;\n  }\n  return result;\n};\n","import {CssStylesheetAST} from '../type';\nimport Compiler, {CompilerOptions} from './compiler';\n\nexport default (node: CssStylesheetAST, options?: CompilerOptions) => {\n  const compiler = new Compiler(options || {});\n  return compiler.compile(node);\n};\n","import {\n  CssAllNodesAST,\n  CssCharsetAST,\n  CssCommentAST,\n  CssCommonPositionAST,\n  CssContainerAST,\n  CssCustomMediaAST,\n  CssDeclarationAST,\n  CssDocumentAST,\n  CssFontFaceAST,\n  CssHostAST,\n  CssImportAST,\n  CssKeyframeAST,\n  CssKeyframesAST,\n  CssLayerAST,\n  CssMediaAST,\n  CssNamespaceAST,\n  CssPageAST,\n  CssRuleAST,\n  CssStartingStyleAST,\n  CssStylesheetAST,\n  CssSupportsAST,\n  CssTypes,\n} from '../type';\n\nexport type CompilerOptions = {\n  indent?: string;\n  compress?: boolean;\n};\n\nclass Compiler {\n  level = 0;\n  indentation = '  ';\n  compress = false;\n\n  constructor(options?: CompilerOptions) {\n    if (typeof options?.indent === 'string') {\n      this.indentation = options?.indent;\n    }\n    if (options?.compress) {\n      this.compress = true;\n    }\n  }\n\n  // We disable no-unused-vars for _position. We keep position for potential reintroduction of source-map\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  emit(str: string, _position?: CssCommonPositionAST['position']) {\n    return str;\n  }\n\n  /**\n   * Increase, decrease or return current indentation.\n   */\n  indent(level?: number) {\n    this.level = this.level || 1;\n\n    if (level) {\n      this.level += level;\n      return '';\n    }\n\n    return Array(this.level).join(this.indentation);\n  }\n\n  visit(node: CssAllNodesAST): string {\n    switch (node.type) {\n      case CssTypes.stylesheet:\n        return this.stylesheet(node);\n      case CssTypes.rule:\n        return this.rule(node);\n      case CssTypes.declaration:\n        return this.declaration(node);\n      case CssTypes.comment:\n        return this.comment(node);\n      case CssTypes.container:\n        return this.container(node);\n      case CssTypes.charset:\n        return this.charset(node);\n      case CssTypes.document:\n        return this.document(node);\n      case CssTypes.customMedia:\n        return this.customMedia(node);\n      case CssTypes.fontFace:\n        return this.fontFace(node);\n      case CssTypes.host:\n        return this.host(node);\n      case CssTypes.import:\n        return this.import(node);\n      case CssTypes.keyframes:\n        return this.keyframes(node);\n      case CssTypes.keyframe:\n        return this.keyframe(node);\n      case CssTypes.layer:\n        return this.layer(node);\n      case CssTypes.media:\n        return this.media(node);\n      case CssTypes.namespace:\n        return this.namespace(node);\n      case CssTypes.page:\n        return this.page(node);\n      case CssTypes.startingStyle:\n        return this.startingStyle(node);\n      case CssTypes.supports:\n        return this.supports(node);\n    }\n  }\n\n  mapVisit(nodes: Array<CssAllNodesAST>, delim?: string) {\n    let buf = '';\n    delim = delim || '';\n\n    for (let i = 0, length = nodes.length; i < length; i++) {\n      buf += this.visit(nodes[i]);\n      if (delim && i < length - 1) {\n        buf += this.emit(delim);\n      }\n    }\n\n    return buf;\n  }\n\n  compile(node: CssStylesheetAST) {\n    if (this.compress) {\n      return node.stylesheet.rules.map(this.visit, this).join('');\n    }\n\n    return this.stylesheet(node);\n  }\n\n  /**\n   * Visit stylesheet node.\n   */\n  stylesheet(node: CssStylesheetAST) {\n    return this.mapVisit(node.stylesheet.rules, '\\n\\n');\n  }\n\n  /**\n   * Visit comment node.\n   */\n  comment(node: CssCommentAST) {\n    if (this.compress) {\n      return this.emit('', node.position);\n    }\n    return this.emit(this.indent() + '/*' + node.comment + '*/', node.position);\n  }\n\n  /**\n   * Visit container node.\n   */\n  container(node: CssContainerAST) {\n    if (this.compress) {\n      return (\n        this.emit('@container ' + node.container, node.position) +\n        this.emit('{') +\n        this.mapVisit(node.rules) +\n        this.emit('}')\n      );\n    }\n    return (\n      this.emit(this.indent() + '@container ' + node.container, node.position) +\n      this.emit(' {\\n' + this.indent(1)) +\n      this.mapVisit(node.rules, '\\n\\n') +\n      this.emit('\\n' + this.indent(-1) + this.indent() + '}')\n    );\n  }\n\n  /**\n   * Visit container node.\n   */\n  layer(node: CssLayerAST) {\n    if (this.compress) {\n      return (\n        this.emit('@layer ' + node.layer, node.position) +\n        (node.rules\n          ? this.emit('{') +\n            this.mapVisit(<CssAllNodesAST[]>node.rules) +\n            this.emit('}')\n          : ';')\n      );\n    }\n    return (\n      this.emit(this.indent() + '@layer ' + node.layer, node.position) +\n      (node.rules\n        ? this.emit(' {\\n' + this.indent(1)) +\n          this.mapVisit(<CssAllNodesAST[]>node.rules, '\\n\\n') +\n          this.emit('\\n' + this.indent(-1) + this.indent() + '}')\n        : ';')\n    );\n  }\n\n  /**\n   * Visit import node.\n   */\n  import(node: CssImportAST) {\n    return this.emit('@import ' + node.import + ';', node.position);\n  }\n\n  /**\n   * Visit media node.\n   */\n  media(node: CssMediaAST) {\n    if (this.compress) {\n      return (\n        this.emit('@media ' + node.media, node.position) +\n        this.emit('{') +\n        this.mapVisit(node.rules) +\n        this.emit('}')\n      );\n    }\n    return (\n      this.emit(this.indent() + '@media ' + node.media, node.position) +\n      this.emit(' {\\n' + this.indent(1)) +\n      this.mapVisit(node.rules, '\\n\\n') +\n      this.emit('\\n' + this.indent(-1) + this.indent() + '}')\n    );\n  }\n\n  /**\n   * Visit document node.\n   */\n  document(node: CssDocumentAST) {\n    const doc = '@' + (node.vendor || '') + 'document ' + node.document;\n    if (this.compress) {\n      return (\n        this.emit(doc, node.position) +\n        this.emit('{') +\n        this.mapVisit(node.rules) +\n        this.emit('}')\n      );\n    }\n    return (\n      this.emit(doc, node.position) +\n      this.emit(' ' + ' {\\n' + this.indent(1)) +\n      this.mapVisit(node.rules, '\\n\\n') +\n      this.emit(this.indent(-1) + '\\n}')\n    );\n  }\n\n  /**\n   * Visit charset node.\n   */\n  charset(node: CssCharsetAST) {\n    return this.emit('@charset ' + node.charset + ';', node.position);\n  }\n\n  /**\n   * Visit namespace node.\n   */\n  namespace(node: CssNamespaceAST) {\n    return this.emit('@namespace ' + node.namespace + ';', node.position);\n  }\n\n  /**\n   * Visit container node.\n   */\n  startingStyle(node: CssStartingStyleAST) {\n    if (this.compress) {\n      return (\n        this.emit('@starting-style', node.position) +\n        this.emit('{') +\n        this.mapVisit(node.rules) +\n        this.emit('}')\n      );\n    }\n    return (\n      this.emit(this.indent() + '@starting-style', node.position) +\n      this.emit(' {\\n' + this.indent(1)) +\n      this.mapVisit(node.rules, '\\n\\n') +\n      this.emit('\\n' + this.indent(-1) + this.indent() + '}')\n    );\n  }\n\n  /**\n   * Visit supports node.\n   */\n  supports(node: CssSupportsAST) {\n    if (this.compress) {\n      return (\n        this.emit('@supports ' + node.supports, node.position) +\n        this.emit('{') +\n        this.mapVisit(node.rules) +\n        this.emit('}')\n      );\n    }\n    return (\n      this.emit(this.indent() + '@supports ' + node.supports, node.position) +\n      this.emit(' {\\n' + this.indent(1)) +\n      this.mapVisit(node.rules, '\\n\\n') +\n      this.emit('\\n' + this.indent(-1) + this.indent() + '}')\n    );\n  }\n\n  /**\n   * Visit keyframes node.\n   */\n  keyframes(node: CssKeyframesAST) {\n    if (this.compress) {\n      return (\n        this.emit(\n          '@' + (node.vendor || '') + 'keyframes ' + node.name,\n          node.position,\n        ) +\n        this.emit('{') +\n        this.mapVisit(node.keyframes) +\n        this.emit('}')\n      );\n    }\n    return (\n      this.emit(\n        '@' + (node.vendor || '') + 'keyframes ' + node.name,\n        node.position,\n      ) +\n      this.emit(' {\\n' + this.indent(1)) +\n      this.mapVisit(node.keyframes, '\\n') +\n      this.emit(this.indent(-1) + '}')\n    );\n  }\n\n  /**\n   * Visit keyframe node.\n   */\n  keyframe(node: CssKeyframeAST) {\n    const decls = node.declarations;\n    if (this.compress) {\n      return (\n        this.emit(node.values.join(','), node.position) +\n        this.emit('{') +\n        this.mapVisit(decls) +\n        this.emit('}')\n      );\n    }\n\n    return (\n      this.emit(this.indent()) +\n      this.emit(node.values.join(', '), node.position) +\n      this.emit(' {\\n' + this.indent(1)) +\n      this.mapVisit(decls, '\\n') +\n      this.emit(this.indent(-1) + '\\n' + this.indent() + '}\\n')\n    );\n  }\n\n  /**\n   * Visit page node.\n   */\n  page(node: CssPageAST) {\n    if (this.compress) {\n      const sel = node.selectors.length ? node.selectors.join(', ') : '';\n\n      return (\n        this.emit('@page ' + sel, node.position) +\n        this.emit('{') +\n        this.mapVisit(node.declarations) +\n        this.emit('}')\n      );\n    }\n    const sel = node.selectors.length ? node.selectors.join(', ') + ' ' : '';\n\n    return (\n      this.emit('@page ' + sel, node.position) +\n      this.emit('{\\n') +\n      this.emit(this.indent(1)) +\n      this.mapVisit(node.declarations, '\\n') +\n      this.emit(this.indent(-1)) +\n      this.emit('\\n}')\n    );\n  }\n\n  /**\n   * Visit font-face node.\n   */\n  fontFace(node: CssFontFaceAST) {\n    if (this.compress) {\n      return (\n        this.emit('@font-face', node.position) +\n        this.emit('{') +\n        this.mapVisit(node.declarations) +\n        this.emit('}')\n      );\n    }\n    return (\n      this.emit('@font-face ', node.position) +\n      this.emit('{\\n') +\n      this.emit(this.indent(1)) +\n      this.mapVisit(node.declarations, '\\n') +\n      this.emit(this.indent(-1)) +\n      this.emit('\\n}')\n    );\n  }\n\n  /**\n   * Visit host node.\n   */\n  host(node: CssHostAST) {\n    if (this.compress) {\n      return (\n        this.emit('@host', node.position) +\n        this.emit('{') +\n        this.mapVisit(node.rules) +\n        this.emit('}')\n      );\n    }\n    return (\n      this.emit('@host', node.position) +\n      this.emit(' {\\n' + this.indent(1)) +\n      this.mapVisit(node.rules, '\\n\\n') +\n      this.emit(this.indent(-1) + '\\n}')\n    );\n  }\n\n  /**\n   * Visit custom-media node.\n   */\n  customMedia(node: CssCustomMediaAST) {\n    return this.emit(\n      '@custom-media ' + node.name + ' ' + node.media + ';',\n      node.position,\n    );\n  }\n\n  /**\n   * Visit rule node.\n   */\n  rule(node: CssRuleAST) {\n    const decls = node.declarations;\n    if (!decls.length) {\n      return '';\n    }\n\n    if (this.compress) {\n      return (\n        this.emit(node.selectors.join(','), node.position) +\n        this.emit('{') +\n        this.mapVisit(decls) +\n        this.emit('}')\n      );\n    }\n    const indent = this.indent();\n\n    return (\n      this.emit(\n        node.selectors\n          .map(s => {\n            return indent + s;\n          })\n          .join(',\\n'),\n        node.position,\n      ) +\n      this.emit(' {\\n') +\n      this.emit(this.indent(1)) +\n      this.mapVisit(decls, '\\n') +\n      this.emit(this.indent(-1)) +\n      this.emit('\\n' + this.indent() + '}')\n    );\n  }\n\n  /**\n   * Visit declaration node.\n   */\n  declaration(node: CssDeclarationAST) {\n    if (this.compress) {\n      return (\n        this.emit(node.property + ':' + node.value, node.position) +\n        this.emit(';')\n      );\n    }\n    if (node.property === 'grid-template-areas')\n      return (\n        this.emit(this.indent()) +\n        this.emit(\n          node.property +\n            ': ' +\n            node.value.split('\\n').join('\\n'.padEnd(22) + this.indent()),\n          node.position,\n        ) +\n        this.emit(';')\n      );\n    return (\n      this.emit(this.indent()) +\n      this.emit(node.property + ': ' + node.value, node.position) +\n      this.emit(';')\n    );\n  }\n}\n\nexport default Compiler;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}